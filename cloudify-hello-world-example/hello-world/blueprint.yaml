#######
# Cloudify Hello World blueprint.
#
# The blueprint describes an OpenStack vm created using Cloudify's OpenStack plugin
# and simple web server started using Cloudify's script plugin.
# In addition, an OpenStack floating ip and security group are created and associated with the created vm.
#

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2m2/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2m2/plugin.yaml

inputs:
  webserver_port:
    description: The HTTP web server port
    default: 8080

  agent_user:
    description: User name used when SSH-ing into the started machine

  image_name:
    description: Openstack image name to use for the new server

  flavor_name:
    description: Openstack flavor name to use for the new server

node_templates:
  virtual_ip:
    type: cloudify.openstack.nodes.FloatingIP

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ http_web_server, port ] }

  vm:
    type: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        user: { get_input: agent_user }
      server:
        image_name: { get_input: image_name }
        flavor_name: { get_input: flavor_name }
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: virtual_ip
      - type: cloudify.openstack.server_connected_to_security_group
        target: security_group

  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/configure.sh
        start: scripts/start.sh
        stop: scripts/stop.sh

outputs:
  http_endpoint:
    description: HTTP web server endpoint.
    value: { get_attribute: [ vm, ip ] }

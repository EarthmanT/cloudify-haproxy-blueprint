# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2m2/types.yaml

node_types:

  haproxy.nodes.Proxy:
    derived_from: cloudify.nodes.ApplicationServer
    properties:
      use_existing_resource:
        description: use an existing resource or not.
        type: boolean
        default: false
      port:
        description: The port for HAProxy to listen.
        type: integer
        default: 80
      default_backend:
        description: >
          The group name you choose for your backend targets.
      global_maxconn:
        description: Max number of connections at a time.
        type: integer
        default: 256
      mode:
        description: >
          The protocol that will act as a proxy for.
        type: string
        default: http
      timeout_connect:
        description: >
          Set the maximum time to wait for a connection attempt to a 
          server to succeed.
        type: integer
        default: 5000
      timeout_client:
        description: Set the maximum inactivity time on the client side.
        type: integer
        default: 50000
      timeout_server:
        description: Set the maximum inactivity time on the server side.
        type: integer
        default: 50000
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/haproxy/install-ubuntu.sh
        configure: scripts/haproxy/configure.py
        start: scripts/haproxy/start-ubuntu.sh
        stop: scripts/haproxy/stop-ubuntu.sh

  haproxy.nodes.BackEnd:
    derived_from: cloudify.nodes.ApplicationServer
    properties:
      address:
        description: Use get_attribute to get the ip get_attribute
          of the virtual machine that contains this node.
      port:
        description: The port your backend app listens on.
        type: integer
      maxconn:
        description: Sets the maximum per-process number of concurrent connections.

relationships:
  node_connected_to_backend:
    derived_from: cloudify.relationships.connected_to
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/haproxy/preconfigure.py
          inputs:
            backend_address:
              description: >
                The internal address of the haproxy.nodes.backend template.
              default: { get_property: [ TARGET, address ] }
            port:
              description: The port of that backend template.
              default: { get_property: [ TARGET, port ] }
            maxconn:
              description: That backend template's maxconn value.
              default: { get_property: [ TARGET, maxconn ]}
